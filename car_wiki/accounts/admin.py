from django.contrib import admin
from django.contrib import messages
from .models import Profile, Comment, ModelSuggestion
from cars.models import CarModel, Brand


@admin.register(ModelSuggestion)
class ModelSuggestionAdmin(admin.ModelAdmin):
    list_display = ['brand', 'model_name', 'year', 'suggested_by', 'created_at', 'is_reviewed']
    list_filter = ['brand', 'is_reviewed', 'created_at', 'year']
    search_fields = ['model_name', 'description', 'suggested_by__username']
    readonly_fields = ['created_at']

    fieldsets = (
        ('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏', {
            'fields': ('brand', 'model_name', 'year')
        }),
        ('–û–ø–∏—Å–∞–Ω–∏–µ', {
            'fields': ('description',)
        }),
        ('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —Å—Ç–∞—Ç—É—Å', {
            'fields': ('suggested_by', 'is_reviewed', 'created_at')
        }),
    )

    actions = ['mark_as_reviewed']

    def mark_as_reviewed(self, request, queryset):
        updated = queryset.update(is_reviewed=True)
        self.message_user(request, f'{updated} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏{"–µ" if updated == 1 else "–π"} –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ.')
    mark_as_reviewed.short_description = "–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ"

    # –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ ‚Äî —Å–æ–∑–¥–∞—Ç—å CarModel, –µ—Å–ª–∏ is_reviewed=True
    def save_model(self, request, obj, form, change):
        super().save_model(request, obj, form, change)

        # –µ—Å–ª–∏ –ø–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ ‚Äî —Å–æ–∑–¥–∞—ë–º –º–æ–¥–µ–ª—å
        if obj.is_reviewed and not obj.notified:  # —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—â—ë –Ω–µ —É–≤–µ–¥–æ–º–ª—è–ª–∏
            car_model, created = CarModel.objects.get_or_create(
                brand=obj.brand,
                name=obj.model_name,
                defaults={
                    'year_released': obj.year or 1990,
                    'history': '–î–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.',
                    'why_cult': obj.description,
                    'value': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ.',
                    'image': obj.image
                }
            )

            if not created and obj.image and not car_model.image:
                car_model.image = obj.image
                car_model.save()

            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—É
            try:
                from django.contrib.auth.models import User
                user = obj.suggested_by
                # –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–∏—Å—Ç–µ–º—É Django messages
                messages.success(
                    user,
                    f'–ü—Ä–∏–≤–µ—Ç, {user.username}! '
                    f'–¢–≤–æ—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å "{obj.brand.name} {obj.model_name}" '
                    f'–±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É —Å–∞–π—Ç–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∫–ª–∞–¥ üöó‚ú®'
                )
                # –æ—Ç–º–µ—á–∞–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–∏–ª–∏
                obj.notified = True
                obj.save(update_fields=['notified'])
            except Exception as e:
                # –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–∫–ª—é—á–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è)
                pass

            messages.success(
                request,
                f'–ú–æ–¥–µ–ª—å "{obj.brand.name} {obj.model_name}" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É!'
            )
